FYPY: FYnite elements in PYthon ...executing fypy/main.py 
         14231851 function calls (14199075 primitive calls) in 49.752 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     8192    0.030    0.000    0.201    0.000 <__array_function__ internals>:2(all)
   245802    0.758    0.000    1.529    0.000 <__array_function__ internals>:2(can_cast)
    36864    0.119    0.000    1.630    0.000 <__array_function__ internals>:2(det)
   147456    0.443    0.000    0.871    0.000 <__array_function__ internals>:2(dot)
    32772    0.110    0.000    0.196    0.000 <__array_function__ internals>:2(empty_like)
    32770    0.110    0.000    0.591    0.000 <__array_function__ internals>:2(ndim)
    32770    0.089    0.000    0.131    0.000 <frozen importlib._bootstrap>:389(parent)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
    36864    0.070    0.000    0.108    0.000 <string>:1(__new__)
   946202    1.796    0.000    3.787    0.000 _asarray.py:16(asarray)
    40964    0.088    0.000    0.368    0.000 _methods.py:28(_amax)
    32772    0.065    0.000    0.186    0.000 _methods.py:32(_amin)
     4096    0.009    0.000    0.029    0.000 _methods.py:36(_sum)
     4096    0.009    0.000    0.043    0.000 _methods.py:47(_all)
   155652    0.200    0.000    0.200    0.000 _util.py:129(_prune_array)
     4096    0.053    0.000    0.185    0.000 _util.py:193(_asarray_validated)
      5/1    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
     8192    0.018    0.000    0.037    0.000 abc.py:96(__instancecheck__)
        1    0.288    0.288   49.854   49.854 assembly.py:17(assembly)
     4096    0.010    0.000    0.010    0.000 assembly.py:37(<listcomp>)
     4096    0.011    0.000    0.011    0.000 assembly.py:38(<listcomp>)
     4096    0.009    0.000    0.009    0.000 assembly.py:39(<listcomp>)
     4096    0.009    0.000    0.009    0.000 assembly.py:40(<listcomp>)
     4096    0.008    0.000    0.008    0.000 assembly.py:41(<listcomp>)
     4096    0.009    0.000    0.009    0.000 assembly.py:42(<listcomp>)
     4096    0.008    0.000    0.008    0.000 assembly.py:43(<listcomp>)
     4096    0.018    0.000   11.103    0.003 assutils.py:6(getelem)
    77826    0.155    0.000    0.235    0.000 base.py:1189(isspmatrix)
   393232    0.828    0.000    1.732    0.000 base.py:242(nnz)
    24576    0.079    0.000    7.150    0.000 base.py:298(asformat)
        2    0.000    0.000    0.002    0.001 base.py:390(_add_sparse)
     8192    0.065    0.000    6.054    0.001 base.py:406(__add__)
     8192    0.009    0.000    0.009    0.000 base.py:634(__iadd__)
    36868    0.059    0.000    0.059    0.000 base.py:674(__getattr__)
    81924    0.138    0.000    0.138    0.000 base.py:70(__init__)
   352272    0.347    0.000    0.347    0.000 base.py:84(get_shape)
     4096    0.042    0.000    0.060    0.000 blas.py:253(find_best_blas_type)
     4096    0.056    0.000    0.141    0.000 blas.py:318(_get_funcs)
    16386    0.124    0.000    0.491    0.000 compressed.py:1054(__get_has_canonical_format)
    20482    0.053    0.000    0.073    0.000 compressed.py:1075(__set_has_canonical_format)
    16386    0.072    0.000    0.929    0.000 compressed.py:1083(sum_duplicates)
     4096    0.021    0.000    0.060    0.000 compressed.py:1099(__get_sorted)
   327688    0.421    0.000    0.421    0.000 compressed.py:110(getnnz)
    20482    0.025    0.000    0.025    0.000 compressed.py:1114(__set_sorted)
     4096    0.027    0.000    0.168    0.000 compressed.py:1130(sort_indices)
    77826    1.149    0.000    2.752    0.000 compressed.py:1139(prune)
     8192    0.261    0.000    5.745    0.001 compressed.py:1209(_binopt)
    40960    0.159    0.000    1.011    0.000 compressed.py:127(_set_self)
    65538    1.724    0.000    8.059    0.000 compressed.py:138(check_format)
65538/32770    1.099    0.000   20.373    0.001 compressed.py:30(__init__)
     8192    0.029    0.000    5.774    0.001 compressed.py:354(_add_sparse)
    16386    0.268    0.000    3.479    0.000 coo.py:128(__init__)
    65544    0.304    0.000    0.482    0.000 coo.py:241(getnnz)
    16386    0.542    0.000    1.915    0.000 coo.py:267(_check)
    16386    0.497    0.000    7.045    0.000 coo.py:374(tocsr)
     4096    0.010    0.000    0.014    0.000 core.py:6251(isMaskedArray)
   212998    0.198    0.000    0.198    0.000 csr.py:228(_swap)
    81924    0.181    0.000    0.319    0.000 data.py:22(__init__)
    32770    0.037    0.000    0.037    0.000 data.py:25(_get_dtype)
     4096    0.006    0.000    0.006    0.000 decomp.py:1197(_check_info)
     4096    0.020    0.000    0.030    0.000 decomp.py:501(_check_select)
     4096    0.097    0.000    0.476    0.000 decomp.py:533(eig_banded)
     4096    0.013    0.000    0.489    0.000 decomp.py:864(eigvals_banded)
     4096    0.009    0.000    0.009    0.000 elembase.py:100(trac)
     4096    0.005    0.000    0.005    0.000 elembase.py:106(bf)
     4096    0.010    0.000    0.010    0.000 elembase.py:110(bf)
     4096    0.005    0.000    0.005    0.000 elembase.py:117(coord)
     4096    0.026    0.000    0.026    0.000 elembase.py:121(coord)
     4096    0.005    0.000    0.005    0.000 elembase.py:129(prop)
     4096    0.249    0.000   11.061    0.003 elembase.py:13(__init__)
     4096    0.013    0.000    0.013    0.000 elembase.py:133(prop)
     4096    0.048    0.000    3.033    0.001 elembase.py:140(interp)
     4096    0.121    0.000    4.968    0.001 elembase.py:145(getjaco)
     4096    0.009    0.000    0.009    0.000 elembase.py:148(<listcomp>)
     4096    0.021    0.000   11.413    0.003 elembase.py:152(compute_stiffness)
     4096    0.102    0.000    1.480    0.000 elembase.py:155(compute_rhs)
     4096    0.049    0.000    0.382    0.000 elembase.py:171(setdata)
     4096    1.108    0.000   10.826    0.003 elembase.py:180(create_global_Kf)
     4096    0.031    0.000    0.031    0.000 elembase.py:186(<listcomp>)
     4096    0.021    0.000    0.021    0.000 elembase.py:187(<listcomp>)
     4096    0.045    0.000   31.765    0.008 elembase.py:212(compute)
     4096    0.004    0.000    0.004    0.000 elembase.py:54(ideqn)
     4096    0.054    0.000    0.255    0.000 elembase.py:58(ideqn)
     4096    0.005    0.000    0.005    0.000 elembase.py:76(pforce)
     4096    0.010    0.000    0.010    0.000 elembase.py:80(pforce)
     4096    0.005    0.000    0.005    0.000 elembase.py:86(dirich)
     4096    0.009    0.000    0.009    0.000 elembase.py:90(dirich)
     4096    0.005    0.000    0.005    0.000 elembase.py:96(trac)
     8192    0.009    0.000    0.009    0.000 fromnumeric.py:2273(_all_dispatcher)
     8192    0.026    0.000    0.141    0.000 fromnumeric.py:2277(all)
    32770    0.033    0.000    0.033    0.000 fromnumeric.py:2982(_ndim_dispatcher)
    32770    0.140    0.000    0.369    0.000 fromnumeric.py:2986(ndim)
     8192    0.050    0.000    0.115    0.000 fromnumeric.py:73(_wrapreduction)
     8192    0.012    0.000    0.012    0.000 fromnumeric.py:74(<dictcomp>)
     4096    0.036    0.000    0.105    0.000 function_base.py:432(asarray_chkfinite)
     4096    0.033    0.000    1.093    0.000 gausslegendre.py:20(gauss1d)
     4096    0.154    0.000    1.478    0.000 gausslegendre.py:31(gauss2d)
     4096    0.018    0.000    1.495    0.000 gausslegendre.py:71(getgauss)
   294932    0.676    0.000    0.676    0.000 getlimits.py:497(__init__)
   147466    0.217    0.000    0.217    0.000 getlimits.py:508(min)
   147466    0.170    0.000    0.170    0.000 getlimits.py:521(max)
   122880    0.158    0.000    0.158    0.000 integrate.py:24(<genexpr>)
   122880    0.670    0.000   12.112    0.000 integrate.py:26(<genexpr>)
    12288    0.179    0.000   12.721    0.001 integrate.py:7(integrate_parent)
    12288    0.031    0.000    2.971    0.000 interp.py:1(interp_parent)
   552960    1.651    0.000    1.651    0.000 interp.py:10(<genexpr>)
    12288    0.181    0.000    2.940    0.000 interp.py:10(<listcomp>)
    36864    1.038    0.000    4.679    0.000 jacobian.py:50(jaco2d)
    36864    0.172    0.000    0.172    0.000 jacobian.py:57(<listcomp>)
    36864    0.112    0.000    0.112    0.000 jacobian.py:58(<listcomp>)
     4096    0.013    0.000    0.155    0.000 lapack.py:662(get_lapack_funcs)
    73728    0.140    0.000    0.208    0.000 linalg.py:121(isComplexType)
    36864    0.080    0.000    0.118    0.000 linalg.py:134(_realType)
    36864    0.189    0.000    0.448    0.000 linalg.py:144(_commonType)
    36864    0.052    0.000    0.052    0.000 linalg.py:203(_assertRankAtLeast2)
    36864    0.516    0.000    1.391    0.000 linalg.py:2072(det)
    36864    0.054    0.000    0.054    0.000 linalg.py:209(_assertNdSquareness)
    36864    0.037    0.000    0.037    0.000 linalg.py:482(_unary_dispatcher)
     4096    0.017    0.000    0.035    0.000 linelas2d.py:102(rhs_point_force)
    36864    7.673    0.000   10.892    0.000 linelas2d.py:18(stiffness_kernel)
    36864    0.201    0.000    0.395    0.000 linelas2d.py:78(rhs_bf_kernel)
     4096    0.024    0.000   11.085    0.003 linelas2d.py:8(__init__)
    36864    0.075    0.000    0.154    0.000 linelas2d.py:96(rhs_trac_kernel)
   245802    0.233    0.000    0.233    0.000 multiarray.py:469(can_cast)
   147456    0.139    0.000    0.139    0.000 multiarray.py:707(dot)
    32772    0.031    0.000    0.031    0.000 multiarray.py:77(empty_like)
     8192    0.042    0.000    0.115    0.000 numeric.py:1782(isscalar)
        6    0.000    0.000    0.000    0.000 numerictypes.py:578(_can_coerce_all)
       14    0.000    0.000    0.000    0.000 numerictypes.py:587(<listcomp>)
        3    0.000    0.000    0.000    0.000 numerictypes.py:602(find_common_type)
        3    0.000    0.000    0.000    0.000 numerictypes.py:654(<listcomp>)
        3    0.000    0.000    0.000    0.000 numerictypes.py:655(<listcomp>)
     4096    0.232    0.000    1.024    0.000 orthogonal.py:176(_gen_roots_and_weights)
     4096    0.020    0.000    1.044    0.000 orthogonal.py:1884(roots_legendre)
     4096    0.011    0.000    0.011    0.000 orthogonal.py:1920(<lambda>)
     4096    0.063    0.000    0.063    0.000 orthogonal.py:1921(<lambda>)
     4096    0.066    0.000    0.066    0.000 orthogonal.py:1923(<lambda>)
    36864    0.483    0.000    0.955    0.000 shape.py:40(shape2d)
     4096    0.006    0.000    0.006    0.000 shape.py:75(getshape)
   147466    1.830    0.000    5.320    0.000 sputils.py:120(get_index_dtype)
     8192    0.034    0.000    0.174    0.000 sputils.py:182(isscalarlike)
    32770    0.091    0.000    0.681    0.000 sputils.py:187(isintlike)
    57348    0.200    0.000    0.881    0.000 sputils.py:209(isshape)
    24578    0.085    0.000    0.146    0.000 sputils.py:21(upcast)
     8192    0.017    0.000    0.025    0.000 sputils.py:239(isdense)
    98308    0.919    0.000    1.950    0.000 sputils.py:266(check_shape)
   294924    0.498    0.000    0.681    0.000 sputils.py:279(<genexpr>)
    81924    0.305    0.000    0.695    0.000 sputils.py:92(to_native)
    81920    0.092    0.000    0.092    0.000 {built-in method __new__ of type object at 0x8ff5e0}
     8192    0.019    0.000    0.019    0.000 {built-in method _abc._abc_instancecheck}
      5/1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
   196616    0.183    0.000    0.183    0.000 {built-in method _operator.index}
     4096    0.149    0.000    0.155    0.000 {built-in method builtins.eval}
        1    0.000    0.000   49.854   49.854 {built-in method builtins.exec}
    49154    0.118    0.000    0.151    0.000 {built-in method builtins.getattr}
    20482    0.060    0.000    0.086    0.000 {built-in method builtins.hasattr}
    24581    0.030    0.000    0.030    0.000 {built-in method builtins.hash}
   319504    0.340    0.000    0.377    0.000 {built-in method builtins.isinstance}
   110592    0.105    0.000    0.105    0.000 {built-in method builtins.issubclass}
  1187920    1.088    0.000    1.088    0.000 {built-in method builtins.len}
    73736    0.094    0.000    0.094    0.000 {built-in method builtins.max}
   122880    1.380    0.000   15.143    0.000 {built-in method builtins.sum}
     4096    0.022    0.000    0.022    0.000 {built-in method numpy.arange}
  1069094    2.290    0.000    2.290    0.000 {built-in method numpy.array}
   503856    1.067    0.000    2.968    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    40962    0.145    0.000    0.145    0.000 {built-in method numpy.empty}
   909312    2.488    0.000    2.488    0.000 {built-in method numpy.zeros}
    16386    0.261    0.000    0.261    0.000 {built-in method scipy.sparse._sparsetools.coo_tocsr}
    16386    0.125    0.000    0.125    0.000 {built-in method scipy.sparse._sparsetools.csr_has_canonical_format}
     4096    0.018    0.000    0.018    0.000 {built-in method scipy.sparse._sparsetools.csr_has_sorted_indices}
     8192    1.153    0.000    1.153    0.000 {built-in method scipy.sparse._sparsetools.csr_plus_csr}
     4096    0.073    0.000    0.073    0.000 {built-in method scipy.sparse._sparsetools.csr_sort_indices}
     4096    0.032    0.000    0.032    0.000 {built-in method scipy.sparse._sparsetools.csr_sum_duplicates}
     8192    0.017    0.000    0.017    0.000 {built-in method time.perf_counter}
     4096    0.012    0.000    0.055    0.000 {method 'all' of 'numpy.ndarray' objects}
   779743    0.670    0.000    0.670    0.000 {method 'append' of 'list' objects}
    36864    0.109    0.000    0.109    0.000 {method 'astype' of 'numpy.generic' objects}
    32774    0.059    0.000    0.059    0.000 {method 'astype' of 'numpy.ndarray' objects}
      250    0.001    0.000    0.001    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    77826    0.086    0.000    0.086    0.000 {method 'get' of 'dict' objects}
     8192    0.009    0.000    0.009    0.000 {method 'items' of 'dict' objects}
     4096    0.005    0.000    0.005    0.000 {method 'lower' of 'str' objects}
    40964    0.104    0.000    0.472    0.000 {method 'max' of 'numpy.ndarray' objects}
    32772    0.076    0.000    0.262    0.000 {method 'min' of 'numpy.ndarray' objects}
    81924    0.131    0.000    0.131    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
    16384    0.030    0.000    0.030    0.000 {method 'ravel' of 'numpy.ndarray' objects}
    90120    0.500    0.000    0.500    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   847872    0.997    0.000    0.997    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    32770    0.041    0.000    0.041    0.000 {method 'rpartition' of 'str' objects}
     4096    0.011    0.000    0.041    0.000 {method 'sum' of 'numpy.ndarray' objects}


total_time=51.001771899999994,
  pre_time=0.024095900000020265,
  assem_time=49.87228879999998,
  solve_time=1.0744038000000273,
  out_time=0.030969500000082917,
 scipy_time=6.125124199998481

pre_time/total_time =0.00047245221297929587,
 assem_time/total_time =0.9778540419690788,
scipy_time/total_time=0.1200963019874704,
 solve_time/total_time =0.021066009277219393,
 out_time/total_time =0.0006072240011740243,

