FYnite elements in PYthon ...executing fypy/main.py 
         10504459 function calls (10496259 primitive calls) in 36.272 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     8192    0.027    0.000    0.179    0.000 <__array_function__ internals>:2(all)
   131106    0.379    0.000    0.730    0.000 <__array_function__ internals>:2(can_cast)
    36864    0.109    0.000    1.502    0.000 <__array_function__ internals>:2(det)
   147456    0.421    0.000    0.808    0.000 <__array_function__ internals>:2(dot)
    16388    0.051    0.000    0.092    0.000 <__array_function__ internals>:2(empty_like)
    16386    0.052    0.000    0.282    0.000 <__array_function__ internals>:2(ndim)
     8194    0.022    0.000    0.032    0.000 <frozen importlib._bootstrap>:389(parent)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
    36864    0.074    0.000    0.114    0.000 <string>:1(__new__)
   675866    1.201    0.000    2.620    0.000 _asarray.py:16(asarray)
    40964    0.080    0.000    0.294    0.000 _methods.py:28(_amax)
    32772    0.061    0.000    0.158    0.000 _methods.py:32(_amin)
     4096    0.008    0.000    0.025    0.000 _methods.py:36(_sum)
     4096    0.008    0.000    0.034    0.000 _methods.py:47(_all)
    73732    0.088    0.000    0.089    0.000 _util.py:129(_prune_array)
     4096    0.037    0.000    0.146    0.000 _util.py:193(_asarray_validated)
      5/1    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
     8192    0.016    0.000    0.030    0.000 abc.py:96(__instancecheck__)
     4096    0.015    0.000    4.122    0.001 assembly.py:20(getelem)
        1    0.198    0.198   36.361   36.361 assembly.py:33(assembly)
     4096    0.009    0.000    0.009    0.000 assembly.py:52(<listcomp>)
     4096    0.007    0.000    0.007    0.000 assembly.py:53(<listcomp>)
     4096    0.007    0.000    0.007    0.000 assembly.py:54(<listcomp>)
     4096    0.007    0.000    0.007    0.000 assembly.py:55(<listcomp>)
     4096    0.008    0.000    0.008    0.000 assembly.py:56(<listcomp>)
     4096    0.007    0.000    0.007    0.000 assembly.py:57(<listcomp>)
     4096    0.007    0.000    0.007    0.000 assembly.py:58(<listcomp>)
    36866    0.069    0.000    0.103    0.000 base.py:1189(isspmatrix)
   204816    0.413    0.000    0.904    0.000 base.py:242(nnz)
     8192    0.033    0.000    3.519    0.000 base.py:298(asformat)
        2    0.000    0.000    0.003    0.002 base.py:390(_add_sparse)
     8192    0.059    0.000    9.052    0.001 base.py:406(__add__)
     8192    0.008    0.000    0.008    0.000 base.py:634(__iadd__)
    20484    0.030    0.000    0.030    0.000 base.py:674(__getattr__)
    40964    0.065    0.000    0.065    0.000 base.py:70(__init__)
   204816    0.192    0.000    0.192    0.000 base.py:84(get_shape)
     4096    0.036    0.000    0.052    0.000 blas.py:253(find_best_blas_type)
     4096    0.046    0.000    0.121    0.000 blas.py:318(_get_funcs)
     8194    0.058    0.000    0.219    0.000 compressed.py:1054(__get_has_canonical_format)
    12290    0.028    0.000    0.037    0.000 compressed.py:1075(__set_has_canonical_format)
     8194    0.049    0.000    0.609    0.000 compressed.py:1083(sum_duplicates)
     4096    0.018    0.000    0.054    0.000 compressed.py:1099(__get_sorted)
   163848    0.205    0.000    0.205    0.000 compressed.py:110(getnnz)
    12290    0.014    0.000    0.014    0.000 compressed.py:1114(__set_sorted)
     4096    0.025    0.000    0.154    0.000 compressed.py:1130(sort_indices)
    36866    0.510    0.000    1.235    0.000 compressed.py:1139(prune)
     8192    0.249    0.000    8.777    0.001 compressed.py:1209(_binopt)
     8192    0.030    0.000    0.194    0.000 compressed.py:127(_set_self)
    24578    0.622    0.000    2.849    0.000 compressed.py:138(check_format)
24578/16386    0.355    0.000    6.504    0.000 compressed.py:30(__init__)
     8192    0.031    0.000    8.807    0.001 compressed.py:354(_add_sparse)
    16386    0.277    0.000    3.287    0.000 coo.py:128(__init__)
    40968    0.179    0.000    0.286    0.000 coo.py:241(getnnz)
    16386    0.472    0.000    1.690    0.000 coo.py:267(_check)
     8194    0.232    0.000    3.475    0.000 coo.py:374(tocsr)
     4096    0.040    0.000    0.095    0.000 copy.py:128(deepcopy)
     4096    0.018    0.000    0.026    0.000 copy.py:242(_keep_alive)
     4096    0.008    0.000    0.012    0.000 core.py:6251(isMaskedArray)
    90118    0.079    0.000    0.079    0.000 csr.py:228(_swap)
    40964    0.095    0.000    0.160    0.000 data.py:22(__init__)
    24578    0.025    0.000    0.025    0.000 data.py:25(_get_dtype)
     4096    0.005    0.000    0.005    0.000 decomp.py:1197(_check_info)
     4096    0.017    0.000    0.026    0.000 decomp.py:501(_check_select)
     4096    0.077    0.000    0.390    0.000 decomp.py:533(eig_banded)
     4096    0.011    0.000    0.401    0.000 decomp.py:864(eigvals_banded)
     4096    0.008    0.000    0.008    0.000 elembase.py:101(trac)
     4096    0.005    0.000    0.005    0.000 elembase.py:107(bf)
     4096    0.010    0.000    0.010    0.000 elembase.py:111(bf)
     4096    0.005    0.000    0.005    0.000 elembase.py:118(coord)
     4096    0.023    0.000    0.023    0.000 elembase.py:122(coord)
     4096    0.004    0.000    0.004    0.000 elembase.py:130(prop)
     4096    0.011    0.000    0.011    0.000 elembase.py:134(prop)
     4096    0.220    0.000    4.089    0.001 elembase.py:14(__init__)
     4096    0.038    0.000    2.716    0.001 elembase.py:141(interp)
     4096    0.109    0.000    4.506    0.001 elembase.py:146(getjaco)
     4096    0.008    0.000    0.008    0.000 elembase.py:149(<listcomp>)
     4096    0.017    0.000   10.269    0.003 elembase.py:153(compute_stiffness)
     4096    0.087    0.000    1.399    0.000 elembase.py:156(compute_rhs)
     4096    0.044    0.000    0.339    0.000 elembase.py:172(setdata)
     4096    1.032    0.000    3.480    0.001 elembase.py:181(create_global_Kf)
     4096    0.029    0.000    0.029    0.000 elembase.py:187(<listcomp>)
     4096    0.020    0.000    0.020    0.000 elembase.py:188(<listcomp>)
     4096    0.062    0.000   22.432    0.005 elembase.py:205(compute)
     4096    0.004    0.000    0.004    0.000 elembase.py:55(ideqn)
     4096    0.047    0.000    0.226    0.000 elembase.py:59(ideqn)
     4096    0.004    0.000    0.004    0.000 elembase.py:77(pforce)
     4096    0.009    0.000    0.009    0.000 elembase.py:81(pforce)
     4096    0.005    0.000    0.005    0.000 elembase.py:87(dirich)
     4096    0.008    0.000    0.008    0.000 elembase.py:91(dirich)
     4096    0.004    0.000    0.004    0.000 elembase.py:97(trac)
     8192    0.008    0.000    0.008    0.000 fromnumeric.py:2273(_all_dispatcher)
     8192    0.023    0.000    0.124    0.000 fromnumeric.py:2277(all)
    16386    0.016    0.000    0.016    0.000 fromnumeric.py:2982(_ndim_dispatcher)
    16386    0.063    0.000    0.176    0.000 fromnumeric.py:2986(ndim)
     8192    0.043    0.000    0.101    0.000 fromnumeric.py:73(_wrapreduction)
     8192    0.010    0.000    0.010    0.000 fromnumeric.py:74(<dictcomp>)
     4096    0.028    0.000    0.084    0.000 function_base.py:432(asarray_chkfinite)
     4096    0.027    0.000    0.915    0.000 gausslegendre.py:20(gauss1d)
     4096    0.138    0.000    1.267    0.000 gausslegendre.py:31(gauss2d)
     4096    0.016    0.000    1.282    0.000 gausslegendre.py:71(getgauss)
   180244    0.377    0.000    0.377    0.000 getlimits.py:497(__init__)
    90122    0.122    0.000    0.122    0.000 getlimits.py:508(min)
    90122    0.096    0.000    0.096    0.000 getlimits.py:521(max)
   122880    0.147    0.000    0.147    0.000 integrate.py:25(<genexpr>)
   122880    0.572    0.000   10.862    0.000 integrate.py:27(<genexpr>)
    12288    0.163    0.000   11.419    0.001 integrate.py:8(integrate_parent)
    36864    0.926    0.000    4.273    0.000 jacobian.py:50(jaco2d)
    36864    0.154    0.000    0.154    0.000 jacobian.py:57(<listcomp>)
    36864    0.102    0.000    0.102    0.000 jacobian.py:58(<listcomp>)
     4096    0.011    0.000    0.132    0.000 lapack.py:662(get_lapack_funcs)
    73728    0.132    0.000    0.196    0.000 linalg.py:121(isComplexType)
    36864    0.073    0.000    0.107    0.000 linalg.py:134(_realType)
    36864    0.176    0.000    0.417    0.000 linalg.py:144(_commonType)
    36864    0.049    0.000    0.049    0.000 linalg.py:203(_assertRankAtLeast2)
    36864    0.461    0.000    1.280    0.000 linalg.py:2072(det)
    36864    0.052    0.000    0.052    0.000 linalg.py:209(_assertNdSquareness)
    36864    0.036    0.000    0.036    0.000 linalg.py:482(_unary_dispatcher)
     4096    0.022    0.000    0.131    0.000 linelas2d.py:101(rhs_point_force)
    36864    7.097    0.000    9.813    0.000 linelas2d.py:17(stiffness_kernel)
     4096    0.018    0.000    4.107    0.001 linelas2d.py:7(__init__)
    36864    0.179    0.000    0.352    0.000 linelas2d.py:77(rhs_bf_kernel)
    36864    0.069    0.000    0.125    0.000 linelas2d.py:95(rhs_trac_kernel)
   131106    0.117    0.000    0.117    0.000 multiarray.py:469(can_cast)
   147456    0.131    0.000    0.131    0.000 multiarray.py:707(dot)
    16388    0.015    0.000    0.015    0.000 multiarray.py:77(empty_like)
     8192    0.033    0.000    0.094    0.000 numeric.py:1782(isscalar)
        4    0.000    0.000    0.000    0.000 numerictypes.py:578(_can_coerce_all)
       14    0.000    0.000    0.000    0.000 numerictypes.py:587(<listcomp>)
        2    0.000    0.000    0.000    0.000 numerictypes.py:602(find_common_type)
        2    0.000    0.000    0.000    0.000 numerictypes.py:654(<listcomp>)
        2    0.000    0.000    0.000    0.000 numerictypes.py:655(<listcomp>)
     4096    0.200    0.000    0.858    0.000 orthogonal.py:176(_gen_roots_and_weights)
     4096    0.017    0.000    0.875    0.000 orthogonal.py:1884(roots_legendre)
     4096    0.010    0.000    0.010    0.000 orthogonal.py:1920(<lambda>)
     4096    0.052    0.000    0.052    0.000 orthogonal.py:1921(<lambda>)
     4096    0.057    0.000    0.057    0.000 orthogonal.py:1923(<lambda>)
    36864    0.456    0.000    0.911    0.000 shape.py:40(shape2d)
     4096    0.006    0.000    0.006    0.000 shape.py:75(getshape)
    12288    0.029    0.000    2.664    0.000 shape.py:85(interp_parent)
   552960    1.417    0.000    1.417    0.000 shape.py:94(<genexpr>)
    12288    0.188    0.000    2.635    0.000 shape.py:94(<listcomp>)
    90122    1.009    0.000    2.795    0.000 sputils.py:120(get_index_dtype)
     8192    0.030    0.000    0.147    0.000 sputils.py:182(isscalarlike)
    16386    0.044    0.000    0.326    0.000 sputils.py:187(isintlike)
    32772    0.098    0.000    0.424    0.000 sputils.py:209(isshape)
    16386    0.053    0.000    0.091    0.000 sputils.py:21(upcast)
     8192    0.016    0.000    0.023    0.000 sputils.py:239(isdense)
    40964    0.378    0.000    0.791    0.000 sputils.py:266(check_shape)
   122892    0.201    0.000    0.274    0.000 sputils.py:279(<genexpr>)
    40964    0.144    0.000    0.332    0.000 sputils.py:92(to_native)
    81920    0.096    0.000    0.096    0.000 {built-in method __new__ of type object at 0x8ff5e0}
     8192    0.014    0.000    0.014    0.000 {built-in method _abc._abc_instancecheck}
      5/1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
    81928    0.073    0.000    0.073    0.000 {built-in method _operator.index}
     4096    0.106    0.000    0.112    0.000 {built-in method builtins.eval}
        1    0.000    0.000   36.361   36.361 {built-in method builtins.exec}
    36866    0.068    0.000    0.083    0.000 {built-in method builtins.getattr}
    12290    0.035    0.000    0.050    0.000 {built-in method builtins.hasattr}
    16388    0.019    0.000    0.019    0.000 {built-in method builtins.hash}
    12288    0.012    0.000    0.012    0.000 {built-in method builtins.id}
   196624    0.201    0.000    0.231    0.000 {built-in method builtins.isinstance}
   114688    0.103    0.000    0.103    0.000 {built-in method builtins.issubclass}
   557134    0.483    0.000    0.483    0.000 {built-in method builtins.len}
    57352    0.069    0.000    0.069    0.000 {built-in method builtins.max}
   122880    1.277    0.000   13.556    0.000 {built-in method builtins.sum}
     4096    0.018    0.000    0.018    0.000 {built-in method numpy.arange}
   774182    1.667    0.000    1.667    0.000 {built-in method numpy.array}
   356392    0.649    0.000    2.229    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    32770    0.097    0.000    0.097    0.000 {built-in method numpy.empty}
   909312    1.967    0.000    1.967    0.000 {built-in method numpy.zeros}
     8194    0.122    0.000    0.122    0.000 {built-in method scipy.sparse._sparsetools.coo_tocsr}
     8194    0.052    0.000    0.052    0.000 {built-in method scipy.sparse._sparsetools.csr_has_canonical_format}
     4096    0.017    0.000    0.017    0.000 {built-in method scipy.sparse._sparsetools.csr_has_sorted_indices}
     8192    0.976    0.000    0.976    0.000 {built-in method scipy.sparse._sparsetools.csr_plus_csr}
     4096    0.067    0.000    0.067    0.000 {built-in method scipy.sparse._sparsetools.csr_sort_indices}
     4096    0.030    0.000    0.030    0.000 {built-in method scipy.sparse._sparsetools.csr_sum_duplicates}
     4096    0.009    0.000    0.009    0.000 {method '__deepcopy__' of 'numpy.ndarray' objects}
     4096    0.010    0.000    0.044    0.000 {method 'all' of 'numpy.ndarray' objects}
   779743    0.634    0.000    0.634    0.000 {method 'append' of 'list' objects}
    36864    0.101    0.000    0.101    0.000 {method 'astype' of 'numpy.generic' objects}
    32774    0.095    0.000    0.095    0.000 {method 'astype' of 'numpy.ndarray' objects}
      250    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    77826    0.078    0.000    0.078    0.000 {method 'get' of 'dict' objects}
     8192    0.008    0.000    0.008    0.000 {method 'items' of 'dict' objects}
     4096    0.005    0.000    0.005    0.000 {method 'lower' of 'str' objects}
    40964    0.093    0.000    0.387    0.000 {method 'max' of 'numpy.ndarray' objects}
    32772    0.069    0.000    0.227    0.000 {method 'min' of 'numpy.ndarray' objects}
    40964    0.064    0.000    0.064    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
    16384    0.027    0.000    0.027    0.000 {method 'ravel' of 'numpy.ndarray' objects}
    90120    0.394    0.000    0.394    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   847872    0.951    0.000    0.951    0.000 {method 'reshape' of 'numpy.ndarray' objects}
     8194    0.010    0.000    0.010    0.000 {method 'rpartition' of 'str' objects}
     4096    0.010    0.000    0.035    0.000 {method 'sum' of 'numpy.ndarray' objects}


total_time=37.40049089999957,pre_time=0.023208300000987947,assem_time=36.376502700000856solve_time=0.9712787000025855out_time=0.029488100000889972
pre_time/total_time =0.0006205346358431947 assem_time/total_time =0.972620995731403  solve_time/total_time =0.025969677847265817 out_time/total_time =0.0007884415228595385
