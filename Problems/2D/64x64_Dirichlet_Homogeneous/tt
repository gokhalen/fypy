--------------------------------------------------------------------------------
FyPy: Fynite elements in Python3 written by Nachiket Gokhale gokhalen@gmail.com
--------------------------------------------------------------------------------
Solving using spsolve
Serial assembly started...
Numba initialization time ..0.0033089999997173436
         2841742 function calls in 9.880 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     6702    0.007    0.000    0.089    0.000 <__array_function__ internals>:2(all)
    20094    0.015    0.000    1.034    0.000 <__array_function__ internals>:2(concatenate)
    30159    0.019    0.000    0.448    0.000 <__array_function__ internals>:2(det)
   120636    0.055    0.000    0.180    0.000 <__array_function__ internals>:2(dot)
     3350    0.004    0.000    0.042    0.000 <__array_function__ internals>:2(outer)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
    30159    0.012    0.000    0.023    0.000 <string>:1(__new__)
   211168    0.053    0.000    0.434    0.000 _asarray.py:16(asarray)
        4    0.000    0.000    0.000    0.000 _methods.py:28(_amax)
        2    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
        2    0.000    0.000    0.000    0.000 _methods.py:47(_all)
        2    0.000    0.000    0.000    0.000 _util.py:193(_asarray_validated)
        1    0.000    0.000    0.003    0.003 assembly.py:19(initnumba)
        1    0.000    0.000    0.000    0.000 assembly.py:29(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:31(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:32(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:33(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:34(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:35(<listcomp>)
        1    0.096    0.096    9.882    9.882 assembly.py:43(assembly_serial)
     3350    0.005    0.000    0.005    0.000 assembly.py:84(<listcomp>)
     3350    0.003    0.000    0.003    0.000 assembly.py:85(<listcomp>)
     3350    0.004    0.000    0.004    0.000 assembly.py:86(<listcomp>)
     3350    0.004    0.000    0.004    0.000 assembly.py:87(<listcomp>)
     3350    0.003    0.000    0.003    0.000 assembly.py:88(<listcomp>)
     3350    0.004    0.000    0.004    0.000 assembly.py:89(<listcomp>)
     3350    0.003    0.000    0.003    0.000 assembly.py:90(<listcomp>)
        2    0.000    0.000    0.001    0.000 assutils.py:7(getelem)
        2    0.000    0.000    0.000    0.000 base.py:1189(isspmatrix)
        2    0.000    0.000    0.000    0.000 blas.py:253(find_best_blas_type)
        2    0.000    0.000    0.000    0.000 blas.py:318(_get_funcs)
     3350    0.003    0.000    0.008    0.000 core.py:101(__enter__)
     3350    0.005    0.000    0.012    0.000 core.py:105(__exit__)
        2    0.000    0.000    0.000    0.000 core.py:6251(isMaskedArray)
        1    0.000    0.000    0.000    0.000 core.py:70(__init__)
     3350    0.004    0.000    0.005    0.000 core.py:82(tic)
     3350    0.005    0.000    0.006    0.000 core.py:93(toc)
        2    0.000    0.000    0.000    0.000 decomp.py:1197(_check_info)
        2    0.000    0.000    0.000    0.000 decomp.py:501(_check_select)
        2    0.000    0.000    0.000    0.000 decomp.py:533(eig_banded)
        2    0.000    0.000    0.000    0.000 decomp.py:864(eigvals_banded)
     3351    0.004    0.000    0.004    0.000 elembase.py:101(trac)
     3351    0.001    0.000    0.001    0.000 elembase.py:107(bf)
     3351    0.004    0.000    0.004    0.000 elembase.py:111(bf)
     3351    0.001    0.000    0.001    0.000 elembase.py:118(coord)
     3351    0.017    0.000    0.017    0.000 elembase.py:122(coord)
        2    0.000    0.000    0.001    0.000 elembase.py:13(__init__)
     3351    0.001    0.000    0.001    0.000 elembase.py:130(prop)
     3351    0.006    0.000    0.006    0.000 elembase.py:134(prop)
     3351    0.028    0.000    1.209    0.000 elembase.py:141(interp)
     3351    0.071    0.000    1.668    0.000 elembase.py:146(getjaco)
     3351    0.005    0.000    0.005    0.000 elembase.py:149(<listcomp>)
     3351    0.010    0.000    4.832    0.001 elembase.py:153(compute_stiffness)
     3350    0.061    0.000    0.549    0.000 elembase.py:156(compute_rhs)
     3351    0.014    0.000    0.181    0.000 elembase.py:172(setdata)
     3350    0.065    0.000    0.172    0.000 elembase.py:181(create_global_Kf)
     3351    0.017    0.000    8.446    0.003 elembase.py:248(compute)
     3350    0.001    0.000    0.001    0.000 elembase.py:55(ideqn)
     3351    0.037    0.000    0.127    0.000 elembase.py:59(ideqn)
     3350    0.001    0.000    0.001    0.000 elembase.py:77(pforce)
     3351    0.004    0.000    0.004    0.000 elembase.py:81(pforce)
     3350    0.001    0.000    0.001    0.000 elembase.py:87(dirich)
     3351    0.004    0.000    0.004    0.000 elembase.py:91(dirich)
     3351    0.001    0.000    0.001    0.000 elembase.py:97(trac)
     6702    0.001    0.000    0.001    0.000 fromnumeric.py:2273(_all_dispatcher)
     6702    0.010    0.000    0.075    0.000 fromnumeric.py:2277(all)
     6702    0.016    0.000    0.066    0.000 fromnumeric.py:73(_wrapreduction)
     6702    0.003    0.000    0.003    0.000 fromnumeric.py:74(<dictcomp>)
        2    0.000    0.000    0.000    0.000 function_base.py:432(asarray_chkfinite)
        2    0.000    0.000    0.000    0.000 gausslegendre.py:20(gauss1d)
        2    0.000    0.000    0.001    0.000 gausslegendre.py:31(gauss2d)
        2    0.000    0.000    0.001    0.000 gausslegendre.py:71(getgauss)
   100510    0.041    0.000    0.041    0.000 integrate.py:24(<genexpr>)
   100505    0.302    0.000    5.101    0.000 integrate.py:27(<genexpr>)
    10051    0.041    0.000    5.293    0.001 integrate.py:7(integrate_parent)
    10053    0.008    0.000    1.178    0.000 interp.py:1(interp_parent)
   452385    0.743    0.000    0.743    0.000 interp.py:10(<genexpr>)
    10053    0.055    0.000    1.170    0.000 interp.py:10(<listcomp>)
    30159    0.430    0.000    1.503    0.000 jacobian.py:50(jaco2d)
    30159    0.100    0.000    0.100    0.000 jacobian.py:57(<listcomp>)
    30159    0.057    0.000    0.057    0.000 jacobian.py:58(<listcomp>)
        2    0.000    0.000    0.000    0.000 lapack.py:662(get_lapack_funcs)
    60318    0.014    0.000    0.020    0.000 linalg.py:121(isComplexType)
    30159    0.013    0.000    0.018    0.000 linalg.py:134(_realType)
    30159    0.049    0.000    0.084    0.000 linalg.py:144(_commonType)
    30159    0.015    0.000    0.015    0.000 linalg.py:203(_assertRankAtLeast2)
    30159    0.210    0.000    0.408    0.000 linalg.py:2072(det)
    30159    0.017    0.000    0.017    0.000 linalg.py:209(_assertNdSquareness)
    30159    0.005    0.000    0.005    0.000 linalg.py:482(_unary_dispatcher)
    30150    0.094    0.000    0.164    0.000 linelas2d.py:140(rhs_bf_kernel)
    30150    0.010    0.000    0.031    0.000 linelas2d.py:158(rhs_trac_kernel)
     3350    0.004    0.000    0.011    0.000 linelas2d.py:164(rhs_point_force)
    30155    4.383    0.000    4.604    0.000 linelas2d.py:17(stiffness_kernel)
        2    0.000    0.000    0.001    0.000 linelas2d.py:7(__init__)
    20094    0.003    0.000    0.003    0.000 multiarray.py:145(concatenate)
   120636    0.015    0.000    0.015    0.000 multiarray.py:707(dot)
     3350    0.028    0.000    0.053    0.000 numeric.py:1618(indices)
     3350    0.001    0.000    0.001    0.000 numeric.py:819(_outer_dispatcher)
     3350    0.027    0.000    0.033    0.000 numeric.py:823(outer)
        2    0.000    0.000    0.000    0.000 orthogonal.py:176(_gen_roots_and_weights)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1884(roots_legendre)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1920(<lambda>)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1921(<lambda>)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1923(<lambda>)
       18    0.000    0.000    0.000    0.000 shape.py:40(shape2d)
        2    0.000    0.000    0.000    0.000 shape.py:75(getshape)
    30181    0.011    0.000    0.011    0.000 {built-in method __new__ of type object at 0x907780}
     3351    0.086    0.000    0.088    0.000 {built-in method builtins.eval}
        1    0.000    0.000    9.882    9.882 {built-in method builtins.exec}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        8    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
    90477    0.012    0.000    0.012    0.000 {built-in method builtins.issubclass}
     6704    0.002    0.000    0.002    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.print}
   100528    0.483    0.000    6.327    0.000 {built-in method builtins.sum}
     6702    0.014    0.000    0.014    0.000 {built-in method numpy.arange}
   211168    0.381    0.000    0.381    0.000 {built-in method numpy.array}
   180941    1.151    0.000    1.668    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
     3350    0.006    0.000    0.006    0.000 {built-in method numpy.empty}
   150784    0.198    0.000    0.198    0.000 {built-in method numpy.zeros}
     6700    0.003    0.000    0.003    0.000 {built-in method time.perf_counter}
        2    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
    30159    0.057    0.000    0.057    0.000 {method 'astype' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    30167    0.005    0.000    0.005    0.000 {method 'get' of 'dict' objects}
     6702    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}
    26802    0.017    0.000    0.017    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     6710    0.044    0.000    0.044    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   130672    0.054    0.000    0.054    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}


