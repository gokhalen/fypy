--------------------------------------------------------------------------------
FyPy: Fynite elements in Python3 written by Nachiket Gokhale gokhalen@gmail.com
--------------------------------------------------------------------------------
Solving using spsolve
Serial assembly started...
Numba initialization time ..0.0029035000006842893
         3106522 function calls (3106468 primitive calls) in 7.164 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     8194    0.009    0.000    0.107    0.000 <__array_function__ internals>:2(all)
    24576    0.022    0.000    1.598    0.000 <__array_function__ internals>:2(concatenate)
    36873    0.025    0.000    0.586    0.000 <__array_function__ internals>:2(det)
   147492    0.072    0.000    0.236    0.000 <__array_function__ internals>:2(dot)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
     4097    0.006    0.000    0.058    0.000 <__array_function__ internals>:2(outer)
        9    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
    36873    0.017    0.000    0.030    0.000 <string>:1(__new__)
   270474    0.073    0.000    0.622    0.000 _asarray.py:16(asarray)
        8    0.000    0.000    0.001    0.000 _methods.py:28(_amax)
        4    0.000    0.000    0.001    0.000 _methods.py:32(_amin)
        2    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
        2    0.000    0.000    0.000    0.000 _methods.py:47(_all)
        2    0.000    0.000    0.000    0.000 _util.py:193(_asarray_validated)
       28    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        9    0.000    0.000    0.000    0.000 abstract.py:115(__repr__)
    56/29    0.000    0.000    0.000    0.000 abstract.py:118(__hash__)
       14    0.000    0.000    0.000    0.000 abstract.py:121(__eq__)
        3    0.000    0.000    0.000    0.000 abstract.py:148(can_convert_from)
        1    0.000    0.000    0.000    0.000 abstract.py:19(_autoincr)
        9    0.000    0.000    0.000    0.000 abstract.py:48(_intern)
        9    0.000    0.000    0.000    0.000 abstract.py:60(__call__)
        9    0.000    0.000    0.000    0.000 abstract.py:93(__init__)
       35    0.000    0.000    0.000    0.000 abstract.py:96(key)
        1    0.000    0.000    0.003    0.003 assembly.py:19(initnumba)
        1    0.000    0.000    0.000    0.000 assembly.py:29(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:30(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:31(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:32(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:33(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:34(<listcomp>)
        1    0.000    0.000    0.000    0.000 assembly.py:35(<listcomp>)
        1    0.132    0.132    7.166    7.166 assembly.py:43(assembly_serial)
     4096    0.007    0.000    0.007    0.000 assembly.py:84(<listcomp>)
     4096    0.006    0.000    0.006    0.000 assembly.py:85(<listcomp>)
     4096    0.005    0.000    0.005    0.000 assembly.py:86(<listcomp>)
     4096    0.005    0.000    0.005    0.000 assembly.py:87(<listcomp>)
     4096    0.005    0.000    0.005    0.000 assembly.py:88(<listcomp>)
     4096    0.004    0.000    0.004    0.000 assembly.py:89(<listcomp>)
     4096    0.005    0.000    0.005    0.000 assembly.py:90(<listcomp>)
        2    0.000    0.000    0.001    0.001 assutils.py:7(getelem)
        2    0.000    0.000    0.000    0.000 base.py:1189(isspmatrix)
        2    0.000    0.000    0.000    0.000 base.py:242(nnz)
        2    0.000    0.000    0.000    0.000 base.py:70(__init__)
        8    0.000    0.000    0.000    0.000 base.py:84(get_shape)
        2    0.000    0.000    0.000    0.000 blas.py:253(find_best_blas_type)
        2    0.000    0.000    0.000    0.000 blas.py:318(_get_funcs)
        9    0.000    0.000    0.000    0.000 common.py:48(__init__)
        3    0.000    0.000    0.000    0.000 context.py:503(can_convert)
        1    0.000    0.000    0.000    0.000 context.py:559(install_possible_conversions)
        2    0.000    0.000    0.002    0.001 coo.py:128(__init__)
        2    0.000    0.000    0.000    0.000 coo.py:241(getnnz)
        2    0.000    0.000    0.001    0.001 coo.py:267(_check)
     4098    0.004    0.000    0.012    0.000 core.py:101(__enter__)
     4098    0.008    0.000    0.017    0.000 core.py:105(__exit__)
        2    0.000    0.000    0.000    0.000 core.py:6251(isMaskedArray)
        1    0.000    0.000    0.000    0.000 core.py:70(__init__)
     4098    0.006    0.000    0.007    0.000 core.py:82(tic)
     4098    0.007    0.000    0.009    0.000 core.py:93(toc)
        2    0.000    0.000    0.000    0.000 data.py:22(__init__)
        2    0.000    0.000    0.000    0.000 decomp.py:1197(_check_info)
        2    0.000    0.000    0.000    0.000 decomp.py:501(_check_select)
        2    0.000    0.000    0.000    0.000 decomp.py:533(eig_banded)
        2    0.000    0.000    0.000    0.000 decomp.py:864(eigvals_banded)
        1    0.000    0.000    0.000    0.000 dispatcher.py:276(nopython_signatures)
        1    0.000    0.000    0.000    0.000 dispatcher.py:278(<listcomp>)
        1    0.000    0.000    0.000    0.000 dispatcher.py:610(_search_new_conversions)
        1    0.000    0.000    0.000    0.000 dispatcher.py:618(<listcomp>)
       10    0.000    0.000    0.000    0.000 dispatcher.py:629(typeof_pyval)
     4097    0.006    0.000    0.006    0.000 elembase.py:100(trac)
     4097    0.005    0.000    0.005    0.000 elembase.py:106(bf)
     4097    0.006    0.000    0.006    0.000 elembase.py:110(bf)
     4097    0.002    0.000    0.002    0.000 elembase.py:117(coord)
     4097    0.023    0.000    0.023    0.000 elembase.py:121(coord)
     8194    0.002    0.000    0.002    0.000 elembase.py:129(prop)
        2    0.000    0.000    0.001    0.001 elembase.py:13(__init__)
     4097    0.008    0.000    0.008    0.000 elembase.py:133(prop)
     4097    0.047    0.000    1.593    0.000 elembase.py:140(interp)
     4097    0.102    0.000    2.222    0.001 elembase.py:145(getjaco)
     4097    0.006    0.000    0.006    0.000 elembase.py:148(<listcomp>)
     4097    0.083    0.000    0.734    0.000 elembase.py:155(compute_rhs)
     4097    0.019    0.000    0.229    0.000 elembase.py:171(setdata)
     4097    0.086    0.000    0.230    0.000 elembase.py:180(create_global_Kf)
     4097    0.029    0.000    5.029    0.001 elembase.py:247(compute)
     4097    0.001    0.000    0.001    0.000 elembase.py:54(ideqn)
     4097    0.048    0.000    0.156    0.000 elembase.py:58(ideqn)
     4097    0.001    0.000    0.001    0.000 elembase.py:76(pforce)
     4097    0.005    0.000    0.005    0.000 elembase.py:80(pforce)
     4097    0.001    0.000    0.001    0.000 elembase.py:86(dirich)
     4097    0.006    0.000    0.006    0.000 elembase.py:90(dirich)
     4097    0.002    0.000    0.002    0.000 elembase.py:96(trac)
        4    0.000    0.000    0.000    0.000 enum.py:348(__getitem__)
     8194    0.002    0.000    0.002    0.000 fromnumeric.py:2273(_all_dispatcher)
     8194    0.014    0.000    0.090    0.000 fromnumeric.py:2277(all)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:2982(_ndim_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:2986(ndim)
     8194    0.022    0.000    0.076    0.000 fromnumeric.py:73(_wrapreduction)
     8194    0.004    0.000    0.004    0.000 fromnumeric.py:74(<dictcomp>)
        2    0.000    0.000    0.000    0.000 function_base.py:432(asarray_chkfinite)
       10    0.000    0.000    0.000    0.000 functools.py:814(dispatch)
       10    0.000    0.000    0.000    0.000 functools.py:870(wrapper)
        2    0.000    0.000    0.000    0.000 gausslegendre.py:20(gauss1d)
        2    0.000    0.000    0.001    0.000 gausslegendre.py:31(gauss2d)
        2    0.000    0.000    0.001    0.000 gausslegendre.py:71(getgauss)
        8    0.000    0.000    0.000    0.000 getlimits.py:497(__init__)
        4    0.000    0.000    0.000    0.000 getlimits.py:508(min)
        4    0.000    0.000    0.000    0.000 getlimits.py:521(max)
    81940    0.041    0.000    0.041    0.000 integrate.py:24(<genexpr>)
    81940    0.220    0.000    0.464    0.000 integrate.py:27(<genexpr>)
     8194    0.037    0.000    0.630    0.000 integrate.py:7(integrate_parent)
    12291    0.010    0.000    1.538    0.000 interp.py:1(interp_parent)
   553095    0.957    0.000    0.957    0.000 interp.py:10(<genexpr>)
    12291    0.075    0.000    1.527    0.000 interp.py:10(<listcomp>)
    36873    0.574    0.000    1.976    0.000 jacobian.py:50(jaco2d)
    36873    0.132    0.000    0.132    0.000 jacobian.py:57(<listcomp>)
    36873    0.075    0.000    0.075    0.000 jacobian.py:58(<listcomp>)
        2    0.000    0.000    0.000    0.000 lapack.py:662(get_lapack_funcs)
    73746    0.018    0.000    0.027    0.000 linalg.py:121(isComplexType)
    36873    0.016    0.000    0.022    0.000 linalg.py:134(_realType)
    36873    0.061    0.000    0.105    0.000 linalg.py:144(_commonType)
    36873    0.020    0.000    0.020    0.000 linalg.py:203(_assertRankAtLeast2)
    36873    0.277    0.000    0.534    0.000 linalg.py:2072(det)
    36873    0.022    0.000    0.022    0.000 linalg.py:209(_assertNdSquareness)
    36873    0.006    0.000    0.006    0.000 linalg.py:482(_unary_dispatcher)
    36873    0.119    0.000    0.201    0.000 linelas2d.py:139(rhs_bf_kernel)
    36873    0.014    0.000    0.043    0.000 linelas2d.py:157(rhs_trac_kernel)
     4097    0.006    0.000    0.015    0.000 linelas2d.py:163(rhs_point_force)
        2    0.000    0.000    0.001    0.001 linelas2d.py:7(__init__)
        2    0.000    0.000    0.001    0.001 linelas2dnumba.py:10(__init__)
     4097    0.082    0.000    0.222    0.000 linelas2dnumba.py:20(compute_stiffness)
     4097    0.004    0.000    0.004    0.000 linelas2dnumba.py:23(<listcomp>)
     4097    0.004    0.000    0.004    0.000 linelas2dnumba.py:24(<listcomp>)
     4097    0.003    0.000    0.003    0.000 linelas2dnumba.py:25(<listcomp>)
     4097    0.029    0.000    0.029    0.000 linelas2dnumbalib.py:9(compute_stiffness_nb)
        9    0.000    0.000    0.000    0.000 misc.py:47(unliteral)
    24576    0.004    0.000    0.004    0.000 multiarray.py:145(concatenate)
   147492    0.019    0.000    0.019    0.000 multiarray.py:707(dot)
        9    0.000    0.000    0.000    0.000 npytypes.py:397(__init__)
       49    0.000    0.000    0.000    0.000 npytypes.py:432(key)
        3    0.000    0.000    0.000    0.000 npytypes.py:453(can_convert_to)
     4097    0.037    0.000    0.069    0.000 numeric.py:1618(indices)
     4097    0.002    0.000    0.002    0.000 numeric.py:819(_outer_dispatcher)
     4097    0.036    0.000    0.044    0.000 numeric.py:823(outer)
        9    0.000    0.000    0.000    0.000 numpy_support.py:215(map_layout)
        9    0.000    0.000    0.000    0.000 numpy_support.py:85(from_dtype)
        2    0.000    0.000    0.000    0.000 orthogonal.py:176(_gen_roots_and_weights)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1884(roots_legendre)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1920(<lambda>)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1921(<lambda>)
        2    0.000    0.000    0.000    0.000 orthogonal.py:1923(<lambda>)
       18    0.000    0.000    0.000    0.000 shape.py:40(shape2d)
        2    0.000    0.000    0.000    0.000 shape.py:75(getshape)
        4    0.000    0.000    0.000    0.000 sputils.py:120(get_index_dtype)
        2    0.000    0.000    0.000    0.000 sputils.py:187(isintlike)
        2    0.000    0.000    0.000    0.000 sputils.py:209(isshape)
        2    0.000    0.000    0.000    0.000 sputils.py:266(check_shape)
        6    0.000    0.000    0.000    0.000 sputils.py:279(<genexpr>)
        2    0.000    0.000    0.000    0.000 sputils.py:92(to_native)
        1    0.000    0.000    0.000    0.000 templates.py:46(args)
       10    0.000    0.000    0.000    0.000 typeconv.py:43(check_compatible)
        3    0.000    0.000    0.000    0.000 typeconv.py:52(set_compatible)
        1    0.000    0.000    0.000    0.000 typeof.py:116(_typeof_int)
        9    0.000    0.000    0.000    0.000 typeof.py:214(_typeof_ndarray)
       10    0.000    0.000    0.000    0.000 typeof.py:23(typeof)
        1    0.000    0.000    0.000    0.000 utils.py:366(bit_length)
       10    0.000    0.000    0.000    0.000 weakref.py:382(__getitem__)
        1    0.000    0.000    0.000    0.000 weakref.py:395(__setitem__)
    36905    0.013    0.000    0.013    0.000 {built-in method __new__ of type object at 0x907780}
       28    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
       10    0.000    0.000    0.000    0.000 {built-in method _abc.get_cache_token}
        4    0.000    0.000    0.000    0.000 {built-in method _operator.index}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.bin}
     4097    0.135    0.000    0.137    0.000 {built-in method builtins.eval}
        1    0.000    0.000    7.166    7.166 {built-in method builtins.exec}
       22    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        9    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
    56/29    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
       46    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
   110619    0.016    0.000    0.016    0.000 {built-in method builtins.issubclass}
     8215    0.002    0.000    0.002    0.000 {built-in method builtins.len}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.next}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.print}
   118813    0.584    0.000    2.004    0.000 {built-in method builtins.sum}
       10    0.000    0.000    0.000    0.000 {built-in method numba.core.typeconv._typeconv.check_compatible}
        3    0.000    0.000    0.000    0.000 {built-in method numba.core.typeconv._typeconv.set_compatible}
     8196    0.017    0.000    0.017    0.000 {built-in method numpy.arange}
   270480    0.550    0.000    0.550    0.000 {built-in method numpy.array}
   221234    1.751    0.000    2.418    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
     4097    0.008    0.000    0.008    0.000 {built-in method numpy.empty}
    40984    0.056    0.000    0.056    0.000 {built-in method numpy.zeros}
     8196    0.004    0.000    0.004    0.000 {built-in method time.perf_counter}
        6    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
    36873    0.079    0.000    0.079    0.000 {method 'astype' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    36890    0.006    0.000    0.006    0.000 {method 'get' of 'dict' objects}
     8194    0.003    0.000    0.003    0.000 {method 'items' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        8    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
    32778    0.022    0.000    0.022    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     8210    0.048    0.000    0.048    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    16390    0.019    0.000    0.019    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}


--------------------------------------------------------------------------------
Preprocessing time 	= 0.026s 	 0.350 %
Assembly time 		= 7.200s  	 97.189%
Solver time 		= 0.132s 	 1.776 %
Output time 		= 0.051s 	 0.684 %
Total time 		= 7.408s	 100.000 %
--------------------------------------------------------------------------------
Reduction time (approx for multiproc) = 1.660s,    22.404% (of Total time) 
--------------------------------------------------------------------------------
Goodbye!
--------------------------------------------------------------------------------
